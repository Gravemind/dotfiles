;;; -*- lexical-binding: t -*-

(eval-when-compile
  (defconst my-packages-list
    (list
     "ace-jump-mode"
     "ace-window"
     "adaptive-wrap"
     "all-the-icons"
     "annalist"
     "async"
     "auto-highlight-symbol"
     "avy"
     "base16-emacs"
     "benchmark-init-el"
     "better-jumper"
     "cargo"
     "centered-cursor-mode"
     "cfrs"
     "clang-format"
     "cmake-mode"
     "compat"
     "consult"
     "consult-dash"
     "consult-ls-git"
     "consult-lsp"
     "d-mode"
     "dash"
     "dash-docs"
     "demangle-mode"
     "diff-hl"
     "diminish"
     ;; "dired-k"
     "disaster"
     "discover-my-major"
     "dockerfile-mode"
     "dtrt-indent"
     "dumb-jump"
     "editorconfig"
     "eglot-x"
     "el-get"
     "elisp-refs"
     "emacs-which-key"
     ;; "embark"
     "epl"
     "evil"
     "evil-args"
     "evil-collection"
     "evil-goggles"
     "evil-indent-plus"
     ;; "evil-leader"
     "evil-lion"
     "evil-markdown"
     "evil-mc"
     ;; "evil-multiedit"
     "evil-nerd-commenter"
     "evil-org-mode"
     "evil-quick-diff"
     "evil-surround"
     "evil-traces"
     "expand-region"
     "explain-pause-mode"
     "f"
     "flx"
     "flycheck"
     "flycheck-dmd-dub"
     ;; "flycheck-eglot"
     "flycheck-grammalecte"
     "flycheck-inline"
     "flycheck-rust"
     "flyspell-correct"
     "gnuplot"
     "gnuplot-mode"
     "go-mode"
     "goto-chg"
     "gptel"
     ;; "gumshoe"
     "haskell-mode"
     "helm"
     "helm-dash"
     "helm-flx"
     "helm-ls-git"
     "helm-org"
     "helm-xref"
     "helpful"
     "history"
     "ht"
     "htmlize"
     "hydra"
     ;; "iedit"
     "ivy-rich"
     "iy-go-to-char"
     "key-chord"
     "llama"
     "log4e"
     "lsp-mode"
     "lsp-mode/clients"
     "lsp-treemacs"
     "lsp-ui"
     "lua-mode"
     "magit-delta"
     "magit/lisp"
     "makey"
     "marginalia"
     "markdown-mode"
     "meson-mode"
     "multiple-cursors"
     "orderless"
     "org-bullets"
     "pfuture"
     "php-mode/lisp"
     "pkg-info"
     ;; "point-stack"
     "popup"
     "popwin"
     "pos-tip"
     "posframe"
     "projectile"
     "queue"
     "racer"
     "rainbow-mode"
     "req-package"
     "rust-mode"
     "s"
     ;; "sideline"
     ;; "sideline-eldoc"
     ;; "sideline-flymake"
     "spinner"
     "swiper"
     "sync-recentf"
     "transient/lisp"
     "treemacs/src/elisp"
     ;; "treemacs/src/extra"
     "undo-tree"
     "use-package"
     "vertico"
     "vertico/extensions"
     "visual-fill-column"
     "wgrep"
     "with-editor/lisp"
     "ws-butler"
     "xterm-color"
     "yaml-mode"
     "yasnippet"
     "zoom"
     )
    "Directories to add to load-path, and to compile")
  )

(defconst my-packages-byte-compile-ignore-files
  (list
   "/flyspell-correct/flyspell-correct-avy-menu.el"
   "/wgrep/wgrep-subtest.el"
   )
  "Paths failing to compile (errors, missing dependencies, etc.)")

(defconst my-packages-load-path
  (eval-when-compile
    (let* ((paths my-packages-list)
           ;; (this-script-path (or load-file-name buffer-file-name))
           (this-script-path (or load-file-name byte-compile-current-file))
           (current-dir (file-name-directory this-script-path))
           (abs-paths (mapcar (lambda (p) (expand-file-name (concat current-dir "/" p))) paths))
           )
      abs-paths)
    )
  "Absolute paths to package directories to add to load-path")
